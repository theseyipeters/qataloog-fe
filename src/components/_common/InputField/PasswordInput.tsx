import { FC, ChangeEvent } from "react";

// Define the props interface
interface PasswordInputFieldProps {
	label?: string;
	type?: string;
	name?: string;
	value?: string;
	placeholder?: string;
	onChange?: (e: ChangeEvent<HTMLInputElement>) => void;
	className?: string;
	errorMessage?: string;
	disabled?: boolean;
}

// Define the InputField component using FC
const PasswordInputField: FC<PasswordInputFieldProps> = ({
	label,
	name,
	value,
	placeholder,
	onChange,
	className = "",
	errorMessage = "",
	disabled = false,
}) => {
	return (
		<div className={`input-field-wrapper ${className}`}>
			{label && (
				<label
					htmlFor={name}
					className="block mb-2">
					{label}
				</label>
			)}
			<div
				className={`bg-white-2 input-field w-full flex items-center px-4 py-2 border rounded-full focus:outline-none ${
					errorMessage ? "border-red-500" : "border-gray-300"
				}`}>
				<input
					id={name}
					type={"password"}
					name={name}
					value={value}
					placeholder={placeholder}
					onChange={onChange}
					disabled={disabled}
					className="w-full bg-transparent focus:outline-none"
				/>

				<button className="flex items-center gap-2">
					<svg
						width="24"
						height="24"
						viewBox="0 0 24 24"
						fill="none"
						xmlns="http://www.w3.org/2000/svg">
						<path
							d="M5.05499 3.24557C4.98913 3.17132 4.90918 3.11089 4.81979 3.06777C4.7304 3.02465 4.63334 2.9997 4.53423 2.99437C4.43513 2.98904 4.33595 3.00343 4.24245 3.03671C4.14895 3.06999 4.06298 3.1215 3.98953 3.18825C3.91608 3.255 3.85661 3.33566 3.81457 3.42556C3.77252 3.51546 3.74874 3.61282 3.7446 3.71198C3.74045 3.81114 3.75603 3.91014 3.79043 4.00323C3.82483 4.09633 3.87737 4.18167 3.94499 4.25432L5.74874 6.239C2.34374 8.32869 0.879366 11.5499 0.814679 11.6962C0.772035 11.7921 0.75 11.8959 0.75 12.0009C0.75 12.1058 0.772035 12.2096 0.814679 12.3056C0.847491 12.3796 1.64155 14.1403 3.40687 15.9056C5.75905 18.2568 8.72999 19.4999 12 19.4999C13.6806 19.5095 15.3442 19.1635 16.8816 18.4846L18.9441 20.7543C19.0099 20.8286 19.0899 20.889 19.1793 20.9321C19.2686 20.9752 19.3657 21.0002 19.4648 21.0055C19.5639 21.0108 19.6631 20.9965 19.7566 20.9632C19.8501 20.9299 19.9361 20.8784 20.0095 20.8116C20.083 20.7449 20.1424 20.6642 20.1845 20.5743C20.2265 20.4844 20.2503 20.3871 20.2544 20.2879C20.2586 20.1887 20.243 20.0897 20.2086 19.9966C20.1742 19.9036 20.1217 19.8182 20.0541 19.7456L5.05499 3.24557ZM9.49218 10.3556L13.3987 14.654C12.8105 14.9635 12.136 15.0688 11.4814 14.9535C10.8268 14.8381 10.229 14.5086 9.78189 14.0167C9.33481 13.5248 9.06377 12.8983 9.01134 12.2356C8.9589 11.573 9.12803 10.9117 9.49218 10.3556ZM12 17.9999C9.11437 17.9999 6.59343 16.9509 4.50655 14.8828C3.64997 14.0315 2.92145 13.0604 2.34374 11.9999C2.78343 11.1759 4.18687 8.86963 6.7828 7.37057L8.4703 9.22213C7.81699 10.0589 7.48052 11.0996 7.52036 12.1604C7.56021 13.2212 7.97379 14.2338 8.68802 15.0192C9.40225 15.8045 10.3711 16.3121 11.4234 16.4522C12.4757 16.5923 13.5436 16.3558 14.4384 15.7846L15.8194 17.3034C14.6006 17.771 13.3053 18.0072 12 17.9999ZM12.5625 9.05338C12.3671 9.01608 12.1944 8.90268 12.0826 8.73812C11.9708 8.57355 11.9289 8.37131 11.9662 8.17588C12.0035 7.98045 12.1169 7.80784 12.2815 7.69602C12.4461 7.5842 12.6483 7.54233 12.8437 7.57963C13.7996 7.76494 14.67 8.2543 15.325 8.97471C15.98 9.69512 16.3846 10.608 16.4784 11.5771C16.4969 11.7752 16.436 11.9725 16.3091 12.1256C16.1822 12.2787 15.9996 12.3752 15.8016 12.3937C15.7781 12.3951 15.7547 12.3951 15.7312 12.3937C15.5438 12.3945 15.3628 12.3251 15.224 12.1991C15.0852 12.0731 14.9986 11.8997 14.9812 11.7131C14.9181 11.0684 14.6486 10.4614 14.2128 9.9822C13.7771 9.50301 13.1982 9.17725 12.5625 9.05338ZM23.1825 12.3056C23.1431 12.3937 22.1934 14.4965 20.055 16.4118C19.9819 16.4793 19.8961 16.5317 19.8027 16.5657C19.7092 16.5998 19.6099 16.6149 19.5105 16.6102C19.4111 16.6055 19.3136 16.581 19.2238 16.5383C19.1339 16.4956 19.0535 16.4354 18.9871 16.3612C18.9208 16.2871 18.8698 16.2005 18.8373 16.1065C18.8047 16.0125 18.7912 15.9129 18.7975 15.8136C18.8037 15.7143 18.8297 15.6173 18.8739 15.5281C18.918 15.439 18.9795 15.3595 19.0547 15.2943C20.1038 14.3518 20.9851 13.2378 21.6609 11.9999C21.0819 10.9385 20.3518 9.96677 19.4934 9.11525C17.4066 7.049 14.8856 5.99994 12 5.99994C11.392 5.9992 10.7849 6.04843 10.185 6.14713C10.0874 6.16438 9.98741 6.16213 9.89073 6.14051C9.79404 6.11889 9.70259 6.07833 9.62167 6.02117C9.54074 5.96401 9.47195 5.89138 9.41925 5.80747C9.36656 5.72357 9.33101 5.63006 9.31466 5.53234C9.29832 5.43463 9.30149 5.33464 9.32401 5.23815C9.34652 5.14167 9.38793 5.0506 9.44584 4.97021C9.50375 4.88982 9.57702 4.8217 9.6614 4.76979C9.74579 4.71787 9.83963 4.6832 9.93749 4.66775C10.6192 4.55519 11.309 4.49906 12 4.49994C15.27 4.49994 18.2409 5.74307 20.5931 8.09525C22.3584 9.86057 23.1525 11.6221 23.1853 11.6962C23.2279 11.7921 23.25 11.8959 23.25 12.0009C23.25 12.1058 23.2279 12.2096 23.1853 12.3056H23.1825Z"
							fill="#F14119"
						/>
					</svg>
				</button>
			</div>
			{errorMessage && (
				<p className="text-red-500 text-sm mt-1">{errorMessage}</p>
			)}
		</div>
	);
};

export default PasswordInputField;
